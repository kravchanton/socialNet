{"version":3,"sources":["assets/images/user.png","redux/dialogs_reducer.tsx","components/Users/users.module.css","api/api.tsx","components/Navbar/navbar.module.css","components/Navbar/navbar.tsx","components/News/news.tsx","components/Music/music.tsx","components/Settings/settings.tsx","redux/users_reducer.tsx","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","redux/auth_reducer.tsx","components/Login/Login.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/app_reducer.tsx","App.tsx","redux/redux-store.tsx","index.tsx","components/common/FormsControls/FormsControls.module.css","assets/images/preloader.svg","components/common/Preloader/Preloader.tsx","utils/validators/validators.tsx","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","components/common/FormsControls/FormsControls.tsx","redux/profile_reducer.tsx"],"names":["addMessageActionCreator","newMessage","type","updateNewMessageActionCreator","text","initialState","dialogs","name","id","messages","message","dialogsReducer","state","action","module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","sizePage","get","then","response","data","unFollow","userId","delete","follow","post","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Navbar","className","classes","nav","item","to","activeClassName","active","News","Music","Settings","followAC","userID","unFollowAC","setToggleIsFetchingAC","isFetching","setToggleIsFollowingProgress","users","totalUsersCount","followingInProgress","followUnFollow","dispatch","apiMethod","actionCreator","a","resultCode","Paginator","props","pagesCount","Math","ceil","totalItemsCount","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPAgeNumber","rightPortionPAgeNumber","styles","paginator","onClick","filter","p","map","selectedPage","onPageChanged","User","user","src","photos","small","userPhoto","img","followed","disabled","some","Users","u","getUsersSelector","usersPage","getTotalUsersCount","getSizePage","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainerAPI","pageNumber","setCurrentPage","this","Preloader","React","Component","UsersContainer","connect","bind","items","totalCount","setAuthUserDataAC","isAuth","getAuthUserData","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Input","error","FormSummaryError","auth","length","stopSubmit","_error","formData","Header","header","alt","HeaderContainer","initialized","DialogsContainer","lazy","ProfileContainer","App","initializeApp","basename","process","Suspense","fallback","path","render","compose","app","promise","Promise","all","finally","rootReducer","combineReducers","profilePage","profileReducer","messagesPage","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","rerenderEntireTree","ReactDOM","document","getElementById","subscribe","preloader","value","maxLengthCreator","maxLength","TextArea","input","meta","hasError","touched","addPostActionCreator","getStatusProfile","posts","likesCount","profile","newPost"],"mappings":"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","file":"static/js/main.6880ea59.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.7bc1f545.png\";","import {ActionType} from \"./store\";\r\nimport {MessagesPageType} from \"../components/Dialogs/Dialogs\";\r\n\r\nexport type AddMessageActionType = ReturnType<typeof addMessageActionCreator>\r\nexport type UpdateMessageActionType = ReturnType<typeof updateNewMessageActionCreator>\r\n\r\nexport const addMessageActionCreator = (newMessage: string) => {\r\n    return {type: \"ADD-MESSAGE\", newMessage} as const\r\n}\r\nexport const updateNewMessageActionCreator = (text: string) => {\r\n    return {type: \"UPDATE-NEW-MESSAGE-TEXT\", text: text} as const\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {name: 'Victor', id: '1'},\r\n        {name: 'Anton', id: '2'},\r\n        {name: 'Andrey', id: '3'},\r\n        {name: 'Sveta', id: '4'},\r\n        {name: 'Anna', id: '5'},\r\n        {name: 'Dmitry', id: '6'},\r\n    ],\r\n    messages: [\r\n        {message: 'Hi', id: '1'},\r\n        {message: 'How are you?', id: '2'},\r\n        {message: 'fdsfdsa', id: '3'},\r\n    ],\r\n}\r\n\r\nexport const dialogsReducer = (state: MessagesPageType = initialState, action: ActionType): MessagesPageType => {\r\n    switch (action.type) {\r\n        case \"ADD-MESSAGE\": {\r\n            return {\r\n                ...state, messages: [...state.messages, {\r\n                    message: action.newMessage,\r\n                    id: \"4\"\r\n                }],\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"users_img__1nIxD\"};","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\"API-KEY\": \"f834a8c4-9e98-4ab1-bfe3-8b09b66ab744\"}\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, sizePage = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${sizePage}`, {})\r\n            .then(response => response.data)\r\n    },\r\n    unFollow(userId: string) {\r\n        return instance.delete(`follow/${userId}`, {\r\n        }).then(response => response.data)\r\n    },\r\n    follow(userId: string) {\r\n        return instance.post(`follow/${userId}`, {}, {\r\n        }).then(response => response.data)\r\n    },\r\n    getProfile(userId: number) {\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/${userId}`).then(response => response.data)\r\n\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/${userId}`).then(response => response.data)\r\n\r\n    },\r\n\r\n    updateStatus(status:string) {\r\n        return instance.put(`profile/status`, {status}).then(response => response.data)\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`).then(response => response.data)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post(`/auth/login`, {email, password, rememberMe}).then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`/auth/login`).then(response => response.data)\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navbar_nav__3VX9y\",\"item\":\"navbar_item__2gggN\",\"active\":\"navbar_active__3Eseg\"};","import React from 'react';\r\nimport classes from './navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Navbar = () => {\r\n    return (\r\n\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}><NavLink to='/profile/' activeClassName={classes.active}>Profile</NavLink></div>\r\n            <div className={classes.item}><NavLink to='/dialogs' activeClassName={classes.active}>Messages</NavLink></div>\r\n            <div className={classes.item}><NavLink to='/news' activeClassName={classes.active}>News</NavLink></div>\r\n            <div className={classes.item}><NavLink to='/music' activeClassName={classes.active}>Music</NavLink></div>\r\n            <div className={classes.item}><NavLink to='/users' activeClassName={classes.active}>Find users</NavLink></div>\r\n            <div className={classes.item}><NavLink to='/settings' activeClassName={classes.active}>Settings</NavLink></div>\r\n\r\n\r\n        </nav> )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n           News\r\n        </div>)\r\n}\r\nexport default News;","import React from \"react\";\r\n\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n           Music\r\n        </div>)\r\n}\r\nexport default Music;","import React from \"react\";\r\n\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>)\r\n}\r\nexport default Settings;","import React, {Dispatch} from \"react\";\r\nimport {usersAPI} from \"../api/api\";\r\n\r\nexport type UsersPropsType = {\r\n    users: Array<UserType>\r\n    totalUsersCount: number,\r\n    sizePage: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: string[],\r\n\r\n\r\n}\r\nexport type UserType = {\r\n    name: string,\r\n    id: string,\r\n    uniqueUrlName: any,\r\n    photos: PhotosType,\r\n    status: any,\r\n    followed: boolean,\r\n\r\n}\r\n\r\nexport type PhotosType = {\r\n    small: any\r\n    large: any\r\n}\r\nexport type FollowActionType = ReturnType<typeof followAC>\r\nexport type UnFollowActionType = ReturnType<typeof unFollowAC>\r\nexport type SetUsersActionType = ReturnType<typeof setUsersAC>\r\nexport type SetCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport type SetTotalCountType = ReturnType<typeof setTotalCountAC>\r\nexport type setToggleIsFetchingType = ReturnType<typeof setToggleIsFetchingAC>\r\nexport type setToggleIsFollowingProgressType = ReturnType<typeof setToggleIsFollowingProgress>\r\n\r\nexport const followAC = (userID: string) => {\r\n    return {type: \"FOLLOW\", userID} as const\r\n}\r\nexport const unFollowAC = (userID: string) => {\r\n    return {type: \"UNFOLLOW\", userID} as const\r\n}\r\nexport const setUsersAC = (users: UserType[]) => {\r\n    return {type: \"SET-USERS\", users} as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {type: \"SET-CURRENT-PAGE\", currentPage} as const\r\n}\r\n\r\nexport const setTotalCountAC = (totalCount: number) => {\r\n    return {type: \"SET-TOTAL-COUNT\", totalCount} as const\r\n}\r\nexport const setToggleIsFetchingAC = (isFetching: boolean) => {\r\n    return {type: \"SET-TOGGLE-IS-FETCHING\", isFetching} as const\r\n}\r\nexport const setToggleIsFollowingProgress = (isFetching: boolean, userId: string) => {\r\n    return {type: \"SET-FOLLOWING-IS-PROGRESS\", isFetching, userId} as const\r\n}\r\n\r\nlet initialState: UsersPropsType = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    sizePage: 10,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n\r\n\r\n}\r\n\r\nexport const usersReducer = (state: UsersPropsType = initialState, action: UsersActionType): UsersPropsType => {\r\n\r\n    switch (action.type) {\r\n        case \"FOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case \"UNFOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case \"SET-USERS\":\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n\r\n        case \"SET-CURRENT-PAGE\":\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case \"SET-TOTAL-COUNT\":\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        case \"SET-TOGGLE-IS-FETCHING\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case \"SET-FOLLOWING-IS-PROGRESS\":\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport type UsersActionType =\r\n    FollowActionType\r\n    | UnFollowActionType\r\n    | SetUsersActionType\r\n    | SetCurrentPageType\r\n    | SetTotalCountType\r\n    | setToggleIsFetchingType\r\n    | setToggleIsFollowingProgressType\r\n\r\n\r\nexport const getUsers = (currentPage: number, sizePage: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(setToggleIsFetchingAC(true))\r\n        let response = await usersAPI.getUsers(currentPage, sizePage)\r\n        dispatch(setUsersAC(response.items))\r\n        dispatch(setTotalCountAC(response.totalCount))\r\n        dispatch(setToggleIsFetchingAC(false))\r\n\r\n\r\n    }\r\n}\r\nexport const followUnFollow = async (dispatch: Dispatch<any>, userId: string, apiMethod: (userId: string) => Promise<any>, actionCreator: (userID: string) => any) => {\r\n    dispatch(setToggleIsFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(setToggleIsFollowingProgress(false, userId))\r\n}\r\nexport const follow = (userId: string) => {\r\n    return async (dispatch: any) => {\r\n        let apiMethod = usersAPI.follow.bind(usersAPI);\r\n        let actionCreator = followAC\r\n        followUnFollow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\n}\r\nexport const unFollow = (userId: string) => {\r\n    return async (dispatch: any) => {\r\n        let apiMethod = usersAPI.unFollow.bind(usersAPI);\r\n        let actionCreator = unFollowAC\r\n        followUnFollow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\n}","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\n\r\n\r\ntype PaginatorPropsType = {\r\n    totalItemsCount: number,\r\n    sizePage: number,\r\n    onPageChanged: (pageNumber: number) => void,\r\n    currentPage: number,\r\n\r\n}\r\n\r\nexport function Paginator(props: PaginatorPropsType) {\r\n    let portionSize = 10\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.sizePage)\r\n\r\n    let pages = []\r\n    for (let i = 1; i < pagesCount + 1; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPAgeNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPAgeNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber - 1)}>Prev</button>}\r\n\r\n            {pages.filter(p => p >= leftPortionPAgeNumber && p <= rightPortionPAgeNumber).map(p => {\r\n                // @ts-ignore\r\n                return <span className={props.currentPage === p && styles.selectedPage} onClick={() => {\r\n                    props.onPageChanged(p)\r\n                    debugger\r\n                }}>{p}</span>\r\n            })}\r\n            {\r\n                portionCount > portionNumber &&\r\n                <button onClick={() => setPortionNumber(portionNumber + 1)}>Next</button>\r\n            }</div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {UserType} from \"../../redux/users_reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype UserPropsType = {\r\n    user: UserType\r\n    follow: (userID: string) => void\r\n    unFollow: (userID: string) => void\r\n    followingInProgress: string[]\r\n}\r\n\r\nexport function User(props: UserPropsType) {\r\n    let user = props.user\r\n    return (<div>\r\n        <div id={user.id}>\r\n            <div>\r\n                <NavLink to={'profile/' + user.id}> <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                                                         className={styles.img}/> </NavLink>\r\n            </div>\r\n            <div>{user.followed ?\r\n                <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                    props.unFollow(user.id)\r\n                }}>unfollow</button>\r\n                :\r\n                <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                    props.follow(user.id)\r\n                }}>follow</button>}\r\n            </div>\r\n\r\n            <span>\r\n    <div>{user.name}</div>\r\n    <div>{user.status}</div>\r\n    <div>{user.id}</div>\r\n\r\n    </span>\r\n\r\n        </div>\r\n\r\n    </div>)\r\n}\r\n\r\n","import React from \"react\";\r\nimport {UserType} from \"../../redux/users_reducer\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\n\r\ntype UsersPropsType = {\r\n\r\n    users: Array<UserType>\r\n    totalUsersCount: number,\r\n    sizePage: number,\r\n    currentPage: number,\r\n    follow: (userID: string) => void\r\n    unFollow: (userID: string) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingInProgress: string[]\r\n\r\n\r\n}\r\n\r\nexport function Users(props: UsersPropsType) {\r\n\r\n    return (<div>\r\n        <Paginator totalItemsCount={props.totalUsersCount} sizePage={props.sizePage} onPageChanged={props.onPageChanged}\r\n                   currentPage={props.currentPage}/>\r\n\r\n        {props.users.map(u => <User key={u.id} user={u} follow={props.follow}\r\n                                    followingInProgress={props.followingInProgress}\r\n                                    unFollow={props.unFollow}/>)}\r\n    </div>)\r\n}\r\n\r\n","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getSizePage = (state: AppStateType) => {\r\n    return state.usersPage.sizePage\r\n}\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, getUsers,\r\n    setCurrentPage, setToggleIsFollowingProgress, unFollow,\r\n    UserType\r\n} from \"../../redux/users_reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Users} from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getSizePage, getTotalUsersCount,\r\n    getUsersSelector\r\n} from \"../../redux/users-selectors\";\r\n\r\ntype UsersContainerType = {\r\n\r\n    users: Array<UserType>\r\n    totalUsersCount: number,\r\n    sizePage: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    follow: (userID: string) => void\r\n    unFollow: (userID: string) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    followingInProgress: string[]\r\n    getUsers: (currentPage: number, sizePage: number) => void\r\n\r\n}\r\n\r\nclass UsersContainerAPI extends React.Component<UsersContainerType, any> {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.sizePage)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.sizePage)\r\n        this.props.setCurrentPage(pageNumber)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   sizePage={this.props.sizePage}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   unFollow={this.props.unFollow}\r\n                   follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n\r\n        </>\r\n\r\n    }\r\n}\r\n\r\nexport const mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n       users: getUsersSelector(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        sizePage: getSizePage(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n    }\r\n}\r\n\r\nconst UsersContainer = connect(mapStateToProps, {\r\n    follow,\r\n    unFollow,\r\n    setCurrentPage,\r\n    getUsers\r\n})(UsersContainerAPI)\r\nexport default UsersContainer;","import React from \"react\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nexport type AuthPropsType = {\r\n    id: string | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\nexport type AuthActionType = ReturnType<typeof setAuthUserDataAC>\r\n\r\n\r\nexport const setAuthUserDataAC = (id: string | null, email: string | null, login: string | null, isAuth: boolean) => {\r\n    return {type: \"SET-USER-DATA\", data: {id, email, login, isAuth}} as const\r\n}\r\n\r\nlet initialState: AuthPropsType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n\r\n}\r\n\r\nexport const authReducer = (state: AuthPropsType = initialState, action: UsersActionType): AuthPropsType => {\r\n    switch (action.type) {\r\n        case \"SET-USER-DATA\":\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type UsersActionType =\r\n    AuthActionType\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let response = await authAPI.me()\r\n    if (response.resultCode === 0) {\r\n        let {id, email, login} = response.data\r\n        dispatch(setAuthUserDataAC(id, email, login, true))\r\n    }\r\n\r\n\r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean) => async (dispatch: any) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let messages = response.messages.length > 0 ? response.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit('login', {_error: messages}))\r\n    }\r\n\r\n\r\n}\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout()\r\n    if (response.resultCode === 0) {\r\n        dispatch(setAuthUserDataAC(null, null, null, false))\r\n    }\r\n\r\n\r\n}","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth_reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootStateType} from \"../../redux/store\";\r\nimport styles from '../common/FormsControls/FormsControls.module.css'\r\n\r\ntype FormDataType = {\r\n    login: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field placeholder={\"Login\"} name={'login'} validate={[required]} component={Input}/></div>\r\n            <div><Field\r\n                placeholder={\"password\"} name={'password'} type={'password'} validate={[required]} component={'input'}/>\r\n            </div>\r\n            <div><Field type={\"checkBox\"} name={'rememberMe'} component={'input'}/> remember me</div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n            {props.error && <div className={styles.FormSummaryError}>{props.error}</div>}\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nexport const Login = (props: any) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.login, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) <Redirect to={'/profile'}/>\r\n    return <><h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </>\r\n}\r\nconst mapStateToProps = (state: RootStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {login})(Login)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Header.module.css';\r\nimport {logout} from \"../../redux/auth_reducer\";\r\n\r\ntype HeaderType = {\r\n\r\n}\r\nexport type HeaderPropsType = {\r\n    id: string\r\n    email: string\r\n    login: string\r\n    isAuth: boolean\r\n    logout: () => void\r\n}\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n    return (\r\n\r\n            <header className={classes.header}>\r\n                <img\r\n                    src=\"https://cdn.dribbble.com/users/10882/screenshots/15172621/media/cd2246d5d0f54f9a4316bd4d276764b2.png?compress=1&resize=400x300\"\r\n                    alt=\"logo\"/>\r\n\r\n                <div className={classes.login}>\r\n                    {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div> : <NavLink to={\"/login\"}>Login</NavLink>}\r\n                </div>\r\n            </header>)\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout, setAuthUserDataAC} from \"../../redux/auth_reducer\";\r\nimport Header, {HeaderPropsType} from \"./Header\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {authAPI} from \"../../api/api\";\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component<any, any> {\r\n\r\n\r\n\r\n    render() {\r\n        return <Header login={this.props.login} id={this.props.id} email={this.props.email} isAuth={this.props.isAuth} logout={this.props.logout} />\r\n\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    login: state.auth.login,\r\n    id: state.auth.id,\r\n    email: state.auth.email,\r\n    isAuth: state.auth.isAuth\r\n\r\n})\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {getAuthUserData} from \"./auth_reducer\";\r\n\r\nexport type AppPropsType = {\r\n    initialized: boolean\r\n}\r\nexport type InitializedSuccessType = ReturnType<typeof initializedSuccess>\r\n\r\n\r\n\r\n\r\nlet initialState: AppPropsType = {\r\n    initialized: false,\r\n\r\n\r\n}\r\n\r\nexport const appReducer = (state: AppPropsType = initialState, action: InitializedSuccessType): AppPropsType => {\r\n    switch (action.type) {\r\n        case \"INITIALIZED-SUCCESS\":\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => {\r\n    return ({type: \"INITIALIZED-SUCCESS\"} as const)\r\n}\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch: any) => {\r\n        let promise =  dispatch(getAuthUserData())\r\n\r\n   Promise.all([promise]).finally(() => {\r\n       dispatch(initializedSuccess())\r\n   })\r\n\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar/navbar\";\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport News from \"./components/News/news\";\r\nimport Music from \"./components/Music/music\";\r\nimport Settings from \"./components/Settings/settings\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app_reducer\";\r\nimport {AppStateType} from \"./redux/redux-store\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\n\r\nconst DialogsContainer = React.lazy(() => import (\"./components/Dialogs/DialogsContainer\"))\r\nconst ProfileContainer = React.lazy(() => import (\"./components/Profile/profileContainer\"))\r\n\r\n\r\nclass App extends React.Component<any, any> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        } else {\r\n            return (\r\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                    <div className='app-wrapper'>\r\n                        <HeaderContainer/>\r\n                        <Navbar/>\r\n                        <React.Suspense fallback={<Preloader/>}>\r\n                            <div className='app-wrapper-content'>\r\n                                <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                                <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n                                <Route path='/users' render={() => <UsersContainer/>}/>\r\n                                <Route path='/login' render={() => <Login/>}/>\r\n                                <Route path='/news' component={News}/>\r\n                                <Route path='/music' component={Music}/>\r\n                                <Route path='/settings' component={Settings}/>\r\n\r\n                            </div>\r\n                        </React.Suspense>\r\n                    </div>\r\n                </BrowserRouter>\r\n\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    initialized: state.app.initialized\r\n})\r\nexport default compose(\r\n    connect(mapStateToProps, {initializeApp})(App));\r\n","import {combineReducers, createStore, applyMiddleware} from \"redux\";\r\nimport {profileReducer} from \"./profile_reducer\";\r\nimport {dialogsReducer} from \"./dialogs_reducer\";\r\nimport {usersReducer} from \"./users_reducer\";\r\nimport {authReducer} from \"./auth_reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from \"redux-form\"\r\nimport {appReducer} from \"./app_reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n})\r\n\r\n\r\n\r\n\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n//@ts-ignore\r\nwindow.store = store\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from \"./redux/redux-store\";\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nlet rerenderEntireTree = () => {\r\n\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    )\r\n}\r\nrerenderEntireTree()\r\n\r\nstore.subscribe(rerenderEntireTree)\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__1uvkq\",\"FormSummaryError\":\"FormsControls_FormSummaryError__1ns6K\"};","export default __webpack_public_path__ + \"static/media/preloader.385f97b7.svg\";","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nfunction Preloader() {\r\n    return <img src={preloader} />\r\n}\r\n\r\nexport default Preloader","\r\n\r\n\r\n\r\nexport const required = (value: string) => {\r\n    if (value) return undefined\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1dCoz\",\"selectedPage\":\"Paginator_selectedPage__3GNfO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3gTDx\",\"login\":\"Header_login__1tmw3\"};","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\n\r\n\r\nexport const TextArea = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={(hasError ? styles.error : \"\")}>\r\n        <textarea className={styles.error} {...input} {...props}></textarea>\r\n\r\n        <div>{hasError && <span>{meta.error}</span>}</div>\r\n    </div>\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}: any) => {\r\n    const hasError = meta.touched && meta.error\r\n    return <div className={(hasError ? styles.error : \"\")}>\r\n        <input className={styles.error} {...input} {...props}></input>\r\n\r\n        <div>{hasError && <span>{meta.error}</span>}</div>\r\n    </div>\r\n}","import {PostsType} from \"./store\";\r\nimport {ProfilePageType} from \"../components/Profile/profile\";\r\nimport React from \"react\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\n\r\n\r\nexport type AddActionType = ReturnType<typeof addPostActionCreator>\r\nexport type SetUserProfileType = ReturnType<typeof setUserProfile>\r\nexport type GetStatusProfileType = ReturnType<typeof getStatusProfile>\r\n\r\nexport const addPostActionCreator = (text: string) => {\r\n    return {type: \"ADD-POST\", text} as const\r\n}\r\nexport const setUserProfile = (profile: any) => {\r\n    return {type: \"SET-USER-PROFILE\", profile} as const\r\n}\r\nexport const getStatusProfile = (status: string) => {\r\n    return {type: \"GET-STATUS\", status} as const\r\n}\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {message: `Hi, how are you?`, likesCount: 4, id: '1'},\r\n        {message: 'Its my first post', likesCount: 1, id: '2'},\r\n        {message: 'yesd', likesCount: 12, id: '3'},\r\n    ],\r\n    profile: {},\r\n    status: ''\r\n}\r\n\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: ActionType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case \"ADD-POST\": {\r\n            let newPost: PostsType = {\r\n                message: action.text,\r\n                likesCount: 0,\r\n                id: \"5\",\r\n            }\r\n            return {\r\n                ...state, posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case \"SET-USER-PROFILE\": {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case \"GET-STATUS\": {\r\n            return {...state, status: action.status}\r\n\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ActionType = AddActionType | SetUserProfileType | GetStatusProfileType\r\n\r\nexport const getProfile = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        usersAPI.getProfile(userId).then(response => {\r\n            dispatch(setUserProfile(response))\r\n\r\n        })\r\n    }\r\n}\r\n\r\nexport const getStatus = (userId: number) => {\r\n    return (dispatch: any) => {\r\n        profileAPI.getStatus(userId).then(response => {\r\n            dispatch(getStatusProfile(response))\r\n\r\n        })\r\n    }\r\n}\r\nexport const updateStatus = (status: string) => {\r\n    return (dispatch: any) => {\r\n        profileAPI.updateStatus(status).then(response => {\r\n            if (response.resultCode === 0) {\r\n                dispatch(getStatusProfile(status))\r\n            }\r\n        })\r\n    }\r\n}\r\n"],"sourceRoot":""}